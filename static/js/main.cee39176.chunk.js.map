{"version":3,"sources":["components/PersonalData.js","components/EducationData.js","components/WorkData.js","components/Preview.js","App.js","index.js"],"names":["PersonalData","state","fname","lname","address","email","phone","onSubmit","e","props","addPersonalData","preventDefault","onChange","setState","target","name","value","input","fontSize","marginLeft","border","borderBottom","this","style","color","fontWeight","margin","marginTop","display","gridTemplateColumns","gridAutoRows","gridGap","textAlign","gridColumn","htmlFor","type","placeholder","cursor","background","borderRadius","padding","Component","EducationData","school","degree","from","to","description","city","addEducationData","WorkData","company","position","addWorkData","From","Preview","divider","subdata","personalInfo","float","educationInfo","workInfo","App","id","newInfo","console","log","activePreview","main","document","getElementById","preview","btn","textContent","className","onClick","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cee39176.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass PersonalData extends Component {\r\n\r\n    state = {\r\n        fname: '',\r\n        lname: '',\r\n        address: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n\r\n    onSubmit = e => {\r\n        this.props.addPersonalData(this.state.fname, this.state.lname, this.state.address, this.state.email, this.state.phone)\r\n        e.preventDefault();\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        //STYLE\r\n\r\n        const subTitle = {\r\n            color: '#1C6E8C',\r\n            fontSize: '25px',\r\n            fontWeight: '700',\r\n            margin: '20px auto 50px auto'\r\n        }\r\n\r\n        const btnSave = {\r\n            cursor: 'pointer',\r\n            border: 'none',\r\n            background: '#1C6E8C',\r\n            color: '#E2D0A9',\r\n            fontSize: '15px',\r\n            fontWeight: '600',\r\n            borderRadius: '5%',\r\n            padding: '12px 30px 12px 30px',\r\n            margin: '15px'\r\n        }\r\n\r\n        const divider ={\r\n            marginTop: '15px',\r\n            borderBottom: 'solid 2px #E96B47'\r\n        }\r\n\r\n\r\n        const grid = {\r\n            marginTop: '10px',\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(2, 1fr)',\r\n            gridAutoRows: 'minmax(100px, auto)',\r\n            gridGap: '50px',\r\n            fontSize: '20px',\r\n            textAlign: 'left'\r\n        }\r\n\r\n        const gridL = {\r\n            gridColumn: '1 / 2'\r\n        }\r\n\r\n        const gridR = {\r\n            gridColumn: '2 / 2'\r\n        }\r\n\r\n        const input = {\r\n            fontSize: '20px',\r\n            marginLeft: '1rem',\r\n            border: 'none',\r\n            borderBottom: '2px solid #2495AA',\r\n        }\r\n\r\n\r\n        return <div >\r\n            <form onSubmit={this.onSubmit}>\r\n                <h2 style={subTitle}>Personal information</h2>\r\n\r\n                <div style={grid}>\r\n                    <div style={gridL}>\r\n                        <label htmlFor='fname'>First name:</label>\r\n                        <input \r\n                        name='fname' \r\n                        type='text' \r\n                        placeholder='First name'\r\n                        onChange={this.onChange}\r\n                        value={this.state.fname}\r\n                        style={input}\r\n                        />\r\n                        <br/><br/>\r\n                        <label htmlFor='lname'>Last name:</label>\r\n                        <input \r\n                        name='lname' \r\n                        type='text' \r\n                        placeholder='Last name'\r\n                        onChange={this.onChange}\r\n                        value={this.state.lname}\r\n                        style={input}\r\n                        />\r\n                        <br/><br/>\r\n                        <label htmlFor='address'>Address:</label>\r\n                        <input \r\n                        name='address' \r\n                        type='text' \r\n                        placeholder='Address'\r\n                        onChange={this.onChange}\r\n                        value={this.state.address}\r\n                        style={input}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={gridR}>\r\n                        <label htmlFor='email'>Email:</label>\r\n                        <input name='email' \r\n                        type='text' \r\n                        placeholder='myemail@gmail.com'\r\n                        onChange={this.onChange}\r\n                        value={this.state.email}\r\n                        style={input}\r\n                        />\r\n                        <br/><br/>\r\n                        <label htmlFor='phone'>Phone number:</label>\r\n                        <input name='phone' \r\n                        type='text' \r\n                        placeholder='123-456-789'\r\n                        onChange={this.onChange}\r\n                        value={this.state.phone}\r\n                        style={input}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" style={btnSave}>\r\n                    SAVE\r\n                </button>\r\n                <div style={divider}></div>\r\n                <br/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n} \r\n\r\n\r\n\r\nexport default PersonalData;","import React, { Component } from 'react'\r\n\r\nexport default class EducationData extends Component {\r\n\r\n    state ={\r\n        school: '',\r\n        degree: '',\r\n        from: '',\r\n        to: '',\r\n        description: '',\r\n        city: ''\r\n    }\r\n\r\n    onSubmit = e => {\r\n        this.props.addEducationData(this.state.school, this.state.degree, this.state.from, this.state.to, this.state.description, this.state.city)\r\n        e.preventDefault();\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        //STYLE\r\n\r\n        const subTitle = {\r\n            color: '#1C6E8C',\r\n            fontSize: '25px',\r\n            fontWeight: '700',\r\n            margin: '20px auto 50px auto'\r\n        }\r\n\r\n        \r\n        const btnSave = {\r\n            cursor: 'pointer',\r\n            border: 'none',\r\n            background: '#1C6E8C',\r\n            color: '#E2D0A9',\r\n            fontSize: '15px',\r\n            fontWeight: '600',\r\n            borderRadius: '5%',\r\n            padding: '12px 30px 12px 30px',\r\n            margin: '35px auto 15px auto'\r\n        }\r\n\r\n        const divider ={\r\n            marginTop: '15px',\r\n            borderBottom: 'solid 2px #E96B47'\r\n        }\r\n\r\n\r\n        const grid = {\r\n            marginTop: '10px',\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(2, 1fr)',\r\n            gridAutoRows: 'minmax(100px, auto)',\r\n            gridGap: '50px',\r\n            fontSize: '20px',\r\n            textAlign: 'left'\r\n        }\r\n    \r\n        \r\n        const gridL = {\r\n            gridColumn: '1 / 2'\r\n        }\r\n    \r\n        const gridR = {\r\n            gridColumn: '2 / 2'\r\n        }\r\n    \r\n        const input = {\r\n            fontSize: '20px',\r\n            marginLeft: '1rem',\r\n            border: 'none',\r\n            borderBottom: '2px solid #2495AA',\r\n            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <h2 style={subTitle}>Education</h2>\r\n                    <div style={grid}>\r\n\r\n                        <div style={gridL}>\r\n                            <label htmlFor='school'>University or school name:</label>\r\n                            <input \r\n                                name='school' \r\n                                type='text' \r\n                                placeholder='University or school name'\r\n                                onChange={this.onChange}\r\n                                value={this.state.school}\r\n                                style={input}\r\n                                />\r\n                            <br/><br/>\r\n                            <label htmlFor='city'>City:</label>\r\n                            <input \r\n                                name='city' \r\n                                type='text' \r\n                                placeholder='City'\r\n                                onChange={this.onChange}\r\n                                value={this.state.city}\r\n                                style={input}\r\n                                />\r\n                            <br/><br/>\r\n                            <label htmlFor='degree'>Degree:</label>\r\n                            <input \r\n                                name='degree' \r\n                                type='text' \r\n                                placeholder='Degree'\r\n                                onChange={this.onChange}\r\n                                value={this.state.degree}\r\n                                style={input}\r\n                                />\r\n                        </div>\r\n\r\n                        <div style={gridR}>\r\n                            <label htmlFor='from'>From:</label>\r\n                            <input \r\n                                name='from' \r\n                                type='text' \r\n                                placeholder='YYYY'\r\n                                onChange={this.onChange}\r\n                                value={this.state.from}\r\n                                style={input}\r\n                                />\r\n                            <br/><br/>\r\n                            <label htmlFor='to'>To:</label>\r\n                            <input \r\n                                name='to' \r\n                                type='text' \r\n                                placeholder='YYYY or Present'\r\n                                onChange={this.onChange}\r\n                                value={this.state.to}\r\n                                style={input}\r\n                                />           \r\n                            <br/><br/>\r\n                            <label htmlFor='description'>Description or archivments:</label>\r\n                            <input \r\n                                name='description' \r\n                                type='text' \r\n                                placeholder='Description'\r\n                                onChange={this.onChange}\r\n                                value={this.state.description}\r\n                                style={input}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" style={btnSave}>\r\n                                SAVE\r\n                    </button>\r\n                    <div style={divider}></div>\r\n                    <br/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class WorkData extends Component {\r\n\r\n    state = {\r\n        company: '',\r\n        position: '',\r\n        city: '',\r\n        from: '',\r\n        to: ''\r\n    }\r\n\r\n    onSubmit = e => {\r\n        this.props.addWorkData(this.state.company, this.state.position, this.state.city, this.state.from, this.state.to)\r\n        e.preventDefault();\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        //STYLE\r\n\r\n        const subTitle = {\r\n            color: '#1C6E8C',\r\n            fontSize: '25px',\r\n            fontWeight: '700',\r\n            margin: '20px auto 50px auto'\r\n        }\r\n\r\n        const btnSave = {\r\n            cursor: 'pointer',\r\n            border: 'none',\r\n            background: '#1C6E8C',\r\n            color: '#E2D0A9',\r\n            fontSize: '15px',\r\n            fontWeight: '600',\r\n            borderRadius: '5%',\r\n            padding: '12px 30px 12px 30px',\r\n            margin: '35px auto 15px auto'\r\n        }\r\n\r\n        const grid = {\r\n            marginTop: '10px',\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(2, 1fr)',\r\n            gridAutoRows: 'minmax(100px, auto)',\r\n            gridGap: '50px',\r\n            fontSize: '20px',\r\n            textAlign: 'left'\r\n        }\r\n\r\n        const gridL = {\r\n            gridColumn: '1 / 2'\r\n        }\r\n\r\n        const gridR = {\r\n            gridColumn: '2 / 2'\r\n        }\r\n\r\n        const input = {\r\n            fontSize: '20px',\r\n            marginLeft: '1rem',\r\n            border: 'none',\r\n            borderBottom: '2px solid #2495AA',\r\n        }\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <h2 style={subTitle}>Work experience</h2>\r\n\r\n                    <div style={grid}>\r\n                        <div style={gridL}>\r\n                            <label htmlFor='company'>Company:</label>\r\n                            <input \r\n                                name='company' \r\n                                type='text' \r\n                                placeholder='Company'\r\n                                onChange={this.onChange}\r\n                                value={this.state.company}\r\n                                style={input}\r\n                                />\r\n                            <br/><br/>\r\n                            <label htmlFor='city'>City:</label>\r\n                            <input \r\n                                name='city' \r\n                                type='text' \r\n                                placeholder='City'\r\n                                onChange={this.onChange}\r\n                                value={this.state.city}\r\n                                style={input}\r\n                                />\r\n                            <br/><br/>\r\n                            <label htmlFor='position'>Position:</label>\r\n                            <input \r\n                                name='position' \r\n                                type='text' \r\n                                placeholder='Position'\r\n                                onChange={this.onChange}\r\n                                value={this.state.position}\r\n                                style={input}\r\n                                />                            \r\n                        </div>\r\n\r\n                        <div style={gridR}>\r\n                            <label htmlFor='from'>From:</label>\r\n                            <input \r\n                                name='from' \r\n                                type='text' \r\n                                placeholder='YYYY'\r\n                                onChange={this.onChange}\r\n                                value={this.state.From}\r\n                                style={input}\r\n                                />\r\n                            <br/><br/>\r\n                            <label htmlFor='to'>To:</label>\r\n                            <input \r\n                                name='to' \r\n                                type='text' \r\n                                placeholder='YYYY or Present'\r\n                                onChange={this.onChange}\r\n                                value={this.state.to}\r\n                                style={input}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" style={btnSave}>\r\n                        SAVE\r\n                    </button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Preview extends Component {\r\n    render() {\r\n\r\n        const name = {\r\n            fontSize: '50px'\r\n        }\r\n\r\n        const personalData = {\r\n            float: 'right',\r\n            marginTop: '-100px',\r\n            fontSize: '15px',\r\n            textAlign: 'right'\r\n        }\r\n\r\n\r\n        const divider = {\r\n            borderBottom: 'solid 1px #425168'\r\n        }\r\n\r\n        const educationData = {\r\n            fontSize: '20px',\r\n\r\n        }\r\n\r\n        const subdata = {\r\n            fontWeight: '700'\r\n\r\n        }\r\n\r\n        const workData = {\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div style={name}>\r\n                        <h2 >{this.props.personalInfo.fname}</h2>\r\n                        <h2 >{this.props.personalInfo.lname}</h2>\r\n                    </div>\r\n                    <div style={personalData}>\r\n                        <h3 >Personal Data:</h3>\r\n                        <br/>\r\n                        <p>{this.props.personalInfo.address}</p>\r\n                        <p>{this.props.personalInfo.email}</p>\r\n                        <p>{this.props.personalInfo.phone}</p>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div style={divider}></div>\r\n                    <br/>\r\n                    <br/>\r\n                </div>\r\n\r\n                <h2 >Education</h2>\r\n                <br/>\r\n                <div style={educationData}>\r\n                    <div style={subdata}>\r\n                        <p>{this.props.educationInfo.school}, {this.props.educationInfo.city}</p>\r\n                        <p>{this.props.educationInfo.from} - {this.props.educationInfo.to}</p>\r\n                    </div>\r\n                    <br/>\r\n                    <p>Degree: {this.props.educationInfo.degree}</p>\r\n                    <p>{this.props.educationInfo.description}</p>\r\n                    <br/>\r\n                    <br/>\r\n                    <div style={divider}></div>\r\n                    <br/>\r\n                    <br/>\r\n                </div>\r\n\r\n\r\n                <h2 >Work experience</h2>\r\n                <br/>\r\n                <div style={workData}>\r\n                    <div style={subdata}>\r\n                        <p>{this.props.workInfo.position}</p>\r\n                        <p>{this.props.workInfo.from} - {this.props.workInfo.to}</p>\r\n                    </div>\r\n                    <br/>\r\n                    <p>{this.props.workInfo.company}, {this.props.workInfo.city}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\n\nimport './App.css';\n\nimport PersonalData from \"./components/PersonalData\";\nimport EducationData from \"./components/EducationData\";\nimport WorkData from './components/WorkData'\nimport Preview from './components/Preview';\n\n\nclass App extends Component {\n\n  state = {\n      personalInfo:{\n        fname: '',\n        lname: '',\n        address: '',\n        email: '',\n        phone: ''\n      },\n      educationInfo:{\n        school: '',\n        degree: '',\n        from: '',\n        to: '',\n        description: '',\n        city: '',\n        id: 1\n      },\n      workInfo:{\n        company: '',\n        position: '',\n        city: '',\n        from: '',\n        to: ''\n      }\n  }\n  \n  addPersonalData = (fname, lname, address, email, phone) => {\n    const newInfo = {\n      fname: fname,\n      lname: lname,\n      address: address,\n      email: email,\n      phone: phone\n    }\n    console.log(newInfo);\n    this.setState({\n      personalInfo: newInfo\n    })\n  }\n  \n\n  addEducationData = (school, degree, from, to, description, city) =>{\n    const newInfo = {\n      school: school,\n      degree: degree,\n      from: from,\n      to: to,\n      description: description,\n      city: city,\n      id: 2\n    }\n    console.log(newInfo);\n    this.setState({\n      educationInfo: newInfo\n    })\n  }\n\n  addWorkData = (company, position, city, from, to) => {\n    const newInfo = {\n      company: company,\n      position: position,\n      city: city,\n      from: from,\n      to: to\n    }\n    this.setState({\n      workInfo: newInfo\n    })\n  }\n\n  activePreview = () => {\n    const main = document.getElementById('main');\n    const preview = document.getElementById('preview');\n    const btn = document.getElementById('btnPreview');\n    if (preview.style.display === 'none' && main.style.display === 'block'){\n      main.style.display = 'none';\n      preview.style.display = 'block';\n      btn.textContent = 'EDIT';\n      btn.style.background = '#DD6C49';\n\n    }else {\n      main.style.display = 'block';\n      preview.style.display = 'none';\n      btn.textContent = 'PREVIEW';\n    }\n  }\n\n\n  render(){\n    return <div className='page'>\n      <div id='header'>\n      <h1 id='title'>CV CREATOR</h1>\n      </div>\n      <div id='main'>\n        <PersonalData addPersonalData={this.addPersonalData}/>\n        <EducationData addEducationData={this.addEducationData}/>\n        <WorkData addWorkData={this.addWorkData}/>\n      </div>\n\n      <div id='preview'>\n        <Preview \n          personalInfo={this.state.personalInfo} \n          educationInfo={this.state.educationInfo}\n          workInfo={this.state.workInfo}\n        />\n      </div>\n\n      <button id='btnPreview' onClick={this.activePreview}>\n          PREVIEW\n      </button>\n\n    </div>\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}